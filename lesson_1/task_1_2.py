a = 5
b = 6

# В двоичном формате числа a и b будут иметь следующий вид:
# a = 0101
# b = 0110

# & - бинарный "И" оператор, копирует бит в результат только если бит присутствует в обоих операндах.
print(a & b)  # (5 & 6) даст нам 4, которое в двоичном формате выглядит так: 0100

# | - бинарный "ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном операнде.
print(a | b)  # (5 | 6) даст нам 7, которое в двоичном формате выглядит так: 0111

# ^ - бинарный "Исключительное ИЛИ" оператор копирует бит только если бит присутствует в одном из операндов, но не в
# обоих сразу.
print(a ^ b)  # (5 ^ 6) даст нам 3, которое в двоичном формате выглядит так: 0011

# Бинарный комплиментарный оператор. Является унарным (то есть ему нужен только один операнд) меняет биты на обратные,
# там где была единица становиться ноль и наоборот.
print(~a)  # (~5) даст нам -6, которое в двоичном формате выглядит так: 1111 1111 1111 1111 1111 1111 1111 1111 1111
# 1111 1111 1111 1111 1111 1111 1010
print(~b) # (~6) даст нам -7, которое в двоичном формате выглядит так: 1111 1111 1111 1111 1111 1111 1111 1111 1111
# 1111 1111 1111 1111 1111 1111 1001

# >> - побитовый сдвиг вправо. Значение левого операнда "сдвигается" вправо на количество бит указанных в правом
# операнде.
print(a >> 2)  # (5 >> 2) даст нам 1, которое в двоичном формате выглядит так: 0001

# << - побитовый сдвиг влево. Значение левого операнда "сдвигается" влево на количество бит указанных в правом операнде.
print(a << 2)  # (5 << 2) даст нам 20, которое в двоичном формате выглядит так: 0001 0100
